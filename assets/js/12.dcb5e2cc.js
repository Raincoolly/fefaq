(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{196:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"_1、es5、es6和es2015有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、es5、es6和es2015有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、ES5、ES6和ES2015有什么区别?")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES2015")]),t._v("特指在"),a("code",[t._v("2015")]),t._v("年发布的新一代"),a("code",[t._v("JS")]),t._v("语言标准，"),a("code",[t._v("ES6")]),t._v("泛指下一代JS语言标准，包含"),a("code",[t._v("ES2015")]),t._v("、"),a("code",[t._v("ES2016")]),t._v("、"),a("code",[t._v("ES2017")]),t._v("、"),a("code",[t._v("ES2018")]),t._v("等。现阶段在绝大部分场景下，"),a("code",[t._v("ES2015")]),t._v("默认等同"),a("code",[t._v("ES6")]),t._v("。"),a("code",[t._v("ES5")]),t._v("泛指上一代语言标准。"),a("code",[t._v("ES2015")]),t._v("可以理解为"),a("code",[t._v("ES5")]),t._v("和"),a("code",[t._v("ES6")]),t._v("的时间分界线")])]),t._v(" "),a("h2",{attrs:{id:"_2、babel是什么，有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、babel是什么，有什么作用","aria-hidden":"true"}},[t._v("#")]),t._v(" 2、babel是什么，有什么作用?")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("babel")]),t._v("是一个 "),a("code",[t._v("ES6")]),t._v(" 转码器，可以将 "),a("code",[t._v("ES6")]),t._v(" 代码转为 "),a("code",[t._v("ES5")]),t._v(" 代码，以便兼容那些还没支持"),a("code",[t._v("ES6")]),t._v("的平台")])]),t._v(" "),a("h2",{attrs:{id:"_3、let有什么用，有了var为什么还要用let？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、let有什么用，有了var为什么还要用let？","aria-hidden":"true"}},[t._v("#")]),t._v(" 3、let有什么用，有了var为什么还要用let？")]),t._v(" "),a("blockquote",[a("p",[t._v("在"),a("code",[t._v("ES6")]),t._v("之前，声明变量只能用"),a("code",[t._v("var")]),t._v("，"),a("code",[t._v("var")]),t._v("方式声明变量其实是很不合理的，准确的说，是因为"),a("code",[t._v("ES5")]),t._v("里面没有块级作用域是很不合理的。没有块级作用域回来带很多难以理解的问题，比如"),a("code",[t._v("for")]),t._v("循环"),a("code",[t._v("var")]),t._v("变量泄露，变量覆盖等问题。"),a("code",[t._v("let")]),t._v("声明的变量拥有自己的块级作用域，且修复了"),a("code",[t._v("var")]),t._v("声明变量带来的变量提升问题。")])]),t._v(" "),a("h2",{attrs:{id:"_4、举一些es6对string字符串类型做的常用升级优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、举一些es6对string字符串类型做的常用升级优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 4、举一些ES6对String字符串类型做的常用升级优化?")]),t._v(" "),a("p",[a("strong",[t._v("优化部分")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v("新增了字符串模板，在拼接大段字符串时，用反斜杠"),a("code",[t._v("(")]),t._v(")`取代以往的字符串相加的形式，能保留所有空格和换行，使得字符串拼接看起来更加直观，更加优雅")])]),t._v(" "),a("p",[a("strong",[t._v("升级部分")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("String")]),t._v("原型上新增了"),a("code",[t._v("includes()")]),t._v("方法，用于取代传统的只能用"),a("code",[t._v("indexOf")]),t._v("查找包含字符的方法("),a("code",[t._v("indexOf")]),t._v("返回"),a("code",[t._v("-1")]),t._v("表示没查到不如"),a("code",[t._v("includes")]),t._v("方法返回"),a("code",[t._v("false")]),t._v("更明确，语义更清晰), 此外还新增了"),a("code",[t._v("startsWith()")]),t._v(", "),a("code",[t._v("endsWith(),")]),t._v(" "),a("code",[t._v("padStart()")]),t._v(","),a("code",[t._v("padEnd()")]),t._v(","),a("code",[t._v("repeat()")]),t._v("等方法，可方便的用于查找，补全字符串")])]),t._v(" "),a("h2",{attrs:{id:"_5、举一些es6对array数组类型做的常用升级优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、举一些es6对array数组类型做的常用升级优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 5、举一些ES6对Array数组类型做的常用升级优化")]),t._v(" "),a("p",[a("strong",[t._v("优化部分")])]),t._v(" "),a("ul",[a("li",[t._v("数组解构赋值。"),a("code",[t._v("ES6")]),t._v("可以直接以"),a("code",[t._v("let [a,b,c] = [1,2,3]")]),t._v("形式进行变量赋值，在声明较多变量时，不用再写很多"),a("code",[t._v("let(var),")]),t._v("且映射关系清晰，且支持赋默认值")]),t._v(" "),a("li",[t._v("扩展运算符。"),a("code",[t._v("ES6")]),t._v("新增的扩展运算符("),a("code",[t._v("...")]),t._v(")(重要),可以轻松的实现数组和松散序列的相互转化，可以取代"),a("code",[t._v("arguments")]),t._v("对象和"),a("code",[t._v("apply")]),t._v("方法，轻松获取未知参数个数情况下的参数集合。（尤其是在"),a("code",[t._v("ES5")]),t._v("中，"),a("code",[t._v("arguments")]),t._v("并不是一个真正的数组，而是一个类数组的对象，但是扩展运算符的逆运算却可以返回一个真正的数组）。扩展运算符还可以轻松方便的实现数组的复制和解构赋值（"),a("code",[t._v("let a = [2,3,4]")]),t._v("; "),a("code",[t._v("let b = [...a]")]),t._v("）")])]),t._v(" "),a("p",[a("strong",[t._v("升级部分")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Array")]),t._v("原型上新增了"),a("code",[t._v("find()")]),t._v("方法，用于取代传统的只能用"),a("code",[t._v("indexOf")]),t._v("查找包含数组项目的方法,且修复了"),a("code",[t._v("indexOf")]),t._v("查找不到"),a("code",[t._v("NaN的bug([NaN].indexOf(NaN) === -1)")]),t._v(".此外还新增了"),a("code",[t._v("copyWithin()")]),t._v(","),a("code",[t._v("includes()")]),t._v(", "),a("code",[t._v("fill()")]),t._v(","),a("code",[t._v("flat()")]),t._v("等方法，可方便的用于字符串的查找，补全,转换等")])]),t._v(" "),a("h2",{attrs:{id:"_6、举一些es6对number数字类型做的常用升级优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、举一些es6对number数字类型做的常用升级优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 6、举一些ES6对Number数字类型做的常用升级优化")]),t._v(" "),a("p",[a("strong",[t._v("优化部分")])]),t._v(" "),a("blockquote",[a("p",[t._v("ES6在"),a("code",[t._v("Number")]),t._v("原型上新增了"),a("code",[t._v("isFinite()")]),t._v(", "),a("code",[t._v("isNaN()")]),t._v("方法，用来取代传统的全局"),a("code",[t._v("isFinite(),")]),t._v(" "),a("code",[t._v("isNaN()")]),t._v("方法检测数值是否有限、是否是"),a("code",[t._v("NaN")]),t._v("。"),a("code",[t._v("ES5")]),t._v("的"),a("code",[t._v("isFinite()")]),t._v(", "),a("code",[t._v("isNaN()")]),t._v("方法都会先将非数值类型的参数转化为"),a("code",[t._v("Number")]),t._v("类型再做判断，这其实是不合理的，最造成i"),a("code",[t._v("sNaN('NaN') === true")]),t._v("的奇怪行为"),a("code",[t._v("--'NaN'")]),t._v("是一个字符串，但是"),a("code",[t._v("isNaN")]),t._v("却说这就是"),a("code",[t._v("NaN")]),t._v("。而"),a("code",[t._v("Number.isFinite()")]),t._v("和"),a("code",[t._v("Number.isNaN()")]),t._v("则不会有此类问题("),a("code",[t._v("Number.isNaN('NaN') === false")]),t._v(")。（"),a("code",[t._v("isFinite()")]),t._v("同上）")])]),t._v(" "),a("p",[a("strong",[t._v("升级部分")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Math")]),t._v("对象上新增了"),a("code",[t._v("Math.cbrt()")]),t._v("，"),a("code",[t._v("trunc()")]),t._v("，"),a("code",[t._v("hypot()")]),t._v("等等较多的科学计数法运算方法，可以更加全面的进行立方根、求和立方根等等科学计算")])]),t._v(" "),a("h2",{attrs:{id:"_7、举一些es6对object类型做的常用升级优化-重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、举一些es6对object类型做的常用升级优化-重要","aria-hidden":"true"}},[t._v("#")]),t._v(" 7、举一些ES6对Object类型做的常用升级优化?(重要)")]),t._v(" "),a("p",[a("strong",[t._v("优化部分")])]),t._v(" "),a("blockquote",[a("p",[t._v("对象属性变量式声明。"),a("code",[t._v("ES6")]),t._v("可以直接以变量形式声明对象属性或者方法，。比传统的键值对形式声明更加简洁，更加方便，语义更加清晰")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red appe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myFruits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let myFruits = {apple: 'red appe', orange: 'yellow orange'};")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("尤其在对象解构赋值(见优化部分b.)或者模块输出变量时，这种写法的好处体现的最为明显")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" MyOwnMethods "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let MyOwnMethods = {keys: keys, values: values, entries: entries}")]),t._v("\n")])])]),a("p",[t._v("可以看到属性变量式声明属性看起来更加简洁明了。方法也可以采用简洁写法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" es5Fun "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" es6Fun "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("对象的解构赋值。 "),a("code",[t._v("ES6")]),t._v("对象也可以像数组解构赋值那样，进行变量的解构赋值")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red appe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("对象的扩展运算符("),a("code",[t._v("...")]),t._v(")。 ES6对象的扩展运算符和数组扩展运算符用法本质上差别不大，毕竟数组也就是特殊的对象。对象的扩展运算符一个最常用也最好用的用处就在于可以轻松的取出一个目标对象内部全部或者部分的可遍历属性，从而进行对象的合并和分解")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("otherFruits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red apple'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" grape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'purple grape'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" peach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sweet peach'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// otherFruits  {grape: 'purple grape', peach: 'sweet peach'}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意: 对象的扩展运算符用在解构赋值时，扩展运算符只能用在最有一个参数(otherFruits后面不能再跟其他参数)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" moreFruits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("watermelon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nice watermelon'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" allFruits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("otherFruits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("moreFruits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("super")]),t._v(" 关键字。"),a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Class")]),t._v("类里新增了类似"),a("code",[t._v("this")]),t._v("的关键字"),a("code",[t._v("super")]),t._v("。同"),a("code",[t._v("this")]),t._v("总是指向当前函数所在的对象不同，"),a("code",[t._v("super")]),t._v("关键字总是指向当前函数所在对象的原型对象")])]),t._v(" "),a("p",[a("strong",[t._v("升级部分")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Object")]),t._v("原型上新增了"),a("code",[t._v("is()")]),t._v("方法，做两个目标对象的相等比较，用来完善"),a("code",[t._v("'==='")]),t._v("方法。"),a("code",[t._v("'==='")]),t._v("方法中"),a("code",[t._v("NaN === NaN //false")]),t._v("其实是不合理的，"),a("code",[t._v("Object.is")]),t._v("修复了这个小"),a("code",[t._v("bug")]),t._v("。"),a("code",[t._v("(Object.is(NaN, NaN) // true)")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Object")]),t._v("原型上新增了"),a("code",[t._v("assign()")]),t._v("方法，用于对象新增属性或者多个对象合并")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntarget "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {a:1, b:2, c:3}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("注意")]),t._v(": "),a("code",[t._v("assign")]),t._v("合并的对象"),a("code",[t._v("target")]),t._v("只能合并"),a("code",[t._v("source1")]),t._v("、s"),a("code",[t._v("ource2")]),t._v("中的自身属性，并不会合并"),a("code",[t._v("source1")]),t._v("、"),a("code",[t._v("source2")]),t._v("中的继承属性，也不会合并不可枚举的属性，且无法正确复制get和set属性（会直接执行"),a("code",[t._v("get/set")]),t._v("函数，取"),a("code",[t._v("return")]),t._v("的值）")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Object")]),t._v("原型上新增了"),a("code",[t._v("getOwnPropertyDescriptors()")]),t._v("方法，此方法增强了"),a("code",[t._v("ES5")]),t._v("中"),a("code",[t._v("getOwnPropertyDescriptor()")]),t._v("方法，可以获取指定对象所有自身属性的描述对象。结合"),a("code",[t._v("defineProperties()")]),t._v("方法，可以完美复制对象，包括复制"),a("code",[t._v("get")]),t._v("和"),a("code",[t._v("set")]),t._v("属性")]),t._v(" "),a("li",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Object")]),t._v("原型上新增了"),a("code",[t._v("getPrototypeOf()")]),t._v("和"),a("code",[t._v("setPrototypeOf()")]),t._v("方法，用来获取或设置当前对象的"),a("code",[t._v("prototype")]),t._v("对象。这个方法存在的意义在于，"),a("code",[t._v("ES5")]),t._v("中获取设置"),a("code",[t._v("prototype")]),t._v("对像是通过"),a("code",[t._v("__proto__")]),t._v("属性来实现的，然而"),a("code",[t._v("__proto__")]),t._v("属性并不是ES规范中的明文规定的属性，只是浏览器各大产商“私自”加上去的属性，只不过因为适用范围广而被默认使用了，再非浏览器环境中并不一定就可以使用，所以为了稳妥起见，获取或设置当前对象的"),a("code",[t._v("prototype")]),t._v("对象时，都应该采用ES6新增的标准用法")]),t._v(" "),a("li",[a("code",[t._v("ES6")]),t._v("在"),a("code",[t._v("Object")]),t._v("原型上还新增了"),a("code",[t._v("Object.keys()")]),t._v("，"),a("code",[t._v("Object.values()")]),t._v("，"),a("code",[t._v("Object.entries()")]),t._v("方法，用来获取对象的所有键、所有值和所有键值对数组")])]),t._v(" "),a("h2",{attrs:{id:"_8、举一些es6对function函数类型做的常用升级优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、举一些es6对function函数类型做的常用升级优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 8、举一些ES6对Function函数类型做的常用升级优化?")]),t._v(" "),a("p",[a("strong",[t._v("优化部分")])]),t._v(" "),a("blockquote",[a("p",[t._v("箭头函数(核心)。箭头函数是ES6核心的升级项之一，箭头函数里没有自己的this,这改变了以往JS函数中最让人难以理解的this运行机制。主要优化点")])]),t._v(" "),a("ul",[a("li",[t._v("箭头函数内的this指向的是函数定义时所在的对象，而不是函数执行时所在的对象。ES5函数里的this总是指向函数执行时所在的对象，这使得在很多情况下"),a("code",[t._v("this")]),t._v("的指向变得很难理解，尤其是非严格模式情况下，"),a("code",[t._v("this")]),t._v("有时候会指向全局对象，这甚至也可以归结为语言层面的bug之一。ES6的箭头函数优化了这一点，它的内部没有自己的"),a("code",[t._v("this")]),t._v(",这也就导致了"),a("code",[t._v("this")]),t._v("总是指向上一层的"),a("code",[t._v("this")]),t._v("，如果上一层还是箭头函数，则继续向上指，直到指向到有自己"),a("code",[t._v("this")]),t._v("的函数为止，并作为自己的"),a("code",[t._v("this")])]),t._v(" "),a("li",[t._v("箭头函数不能用作构造函数，因为它没有自己的"),a("code",[t._v("this")]),t._v("，无法实例化")]),t._v(" "),a("li",[t._v("也是因为箭头函数没有自己的this,所以箭头函数 内也不存在"),a("code",[t._v("arguments")]),t._v("对象。（可以用扩展运算符代替）")]),t._v(" "),a("li",[t._v("函数默认赋值。"),a("code",[t._v("ES6")]),t._v("之前，函数的形参是无法给默认值得，只能在函数内部通过变通方法实现。"),a("code",[t._v("ES6")]),t._v("以更简洁更明确的方式进行函数默认赋值")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("es6Fuc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("es6Fuc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4, default")]),t._v("\n")])])]),a("p",[a("strong",[t._v("升级部分")])]),t._v(" "),a("blockquote",[a("p",[t._v("ES6新增了双冒号运算符，用来取代以往的"),a("code",[t._v("bind")]),t._v("，"),a("code",[t._v("call")]),t._v(",和"),a("code",[t._v("apply")]),t._v("。(浏览器暂不支持，"),a("code",[t._v("Babel")]),t._v("已经支持转码)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\nbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_9、symbol是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、symbol是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 9、Symbol是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Symbol")]),t._v("是"),a("code",[t._v("ES6")]),t._v("引入的第七种原始数据类型（说法不准确，应该是第七种数据类型，Object不是原始数据类型之一，已更正），所有Symbol()生成的值都是独一无二的，可以从根本上解决对象属性太多导致属性名冲突覆盖的问题。对象中"),a("code",[t._v("Symbol()")]),t._v("属性不能被"),a("code",[t._v("for...in")]),t._v("遍历，但是也不是私有属性")])]),t._v(" "),a("h2",{attrs:{id:"_10、set是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、set是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 10、Set是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Set")]),t._v("是"),a("code",[t._v("ES6")]),t._v("引入的一种类似"),a("code",[t._v("Array")]),t._v("的新的数据结构，"),a("code",[t._v("Set")]),t._v("实例的成员类似于数组"),a("code",[t._v("item")]),t._v("成员，区别是"),a("code",[t._v("Set")]),t._v("实例的成员都是唯一，不重复的。这个特性可以轻松地实现数组去重")])]),t._v(" "),a("h2",{attrs:{id:"_11、map是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、map是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 11、Map是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Map")]),t._v("是"),a("code",[t._v("ES6")]),t._v("引入的一种类似"),a("code",[t._v("Object")]),t._v("的新的数据结构，"),a("code",[t._v("Map")]),t._v("可以理解为是"),a("code",[t._v("Object")]),t._v("的超集，打破了以传统键值对形式定义对象，对象的"),a("code",[t._v("key")]),t._v("不再局限于字符串，也可以是"),a("code",[t._v("Object")]),t._v("。可以更加全面的描述对象的属性")])]),t._v(" "),a("h2",{attrs:{id:"_12、proxy是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、proxy是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 12、Proxy是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Proxy")]),t._v("是"),a("code",[t._v("ES6")]),t._v("新增的一个构造函数，可以理解为JS语言的一个代理，用来改变JS默认的一些语言行为，包括拦截默认的"),a("code",[t._v("get/set")]),t._v("等底层方法，使得JS的使用自由度更高，可以最大限度的满足开发者的需求。比如通过拦截对象的"),a("code",[t._v("get/set")]),t._v("方法，可以轻松地定制自己想要的"),a("code",[t._v("key")]),t._v("或者"),a("code",[t._v("value")]),t._v("。下面的例子可以看到，随便定义一个"),a("code",[t._v("myOwnObj")]),t._v("的"),a("code",[t._v("key")]),t._v(",都可以变成自己想要的函数`")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createMyOwnObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//想把所有的key都变成函数，或者Promise,或者anything")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" propKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" randomBoolean "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("randomBoolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\tMessage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`你的")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("propKey"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("运气不错，成功了`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\tMessage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`你的")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("propKey"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("运气不行，失败了`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myOwnObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createMyOwnObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmyOwnObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hahaha"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你的hahaha运气不错，成功了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你的hahaha运气不行，失败了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmyOwnObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wuwuwu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你的wuwuwu运气不错，成功了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你的wuwuwu运气不行，失败了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_13、reflect是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、reflect是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 13、Reflect是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Reflect")]),t._v("是"),a("code",[t._v("ES6")]),t._v("引入的一个新的对象，他的主要作用有两点，一是将原生的一些零散分布在"),a("code",[t._v("Object")]),t._v("、"),a("code",[t._v("Function")]),t._v("或者全局函数里的方法(如"),a("code",[t._v("apply")]),t._v("、"),a("code",[t._v("delete")]),t._v("、"),a("code",[t._v("get")]),t._v("、"),a("code",[t._v("set")]),t._v("等等)，统一整合到"),a("code",[t._v("Reflect")]),t._v("上，这样可以更加方便更加统一的管理一些原生"),a("code",[t._v("API")]),t._v("。其次就是因为"),a("code",[t._v("Proxy")]),t._v("可以改写默认的原生API，如果一旦原生"),a("code",[t._v("API")]),t._v("别改写可能就找不到了，所以"),a("code",[t._v("Reflect")]),t._v("也可以起到备份原生API的作用，使得即使原生"),a("code",[t._v("API")]),t._v("被改写了之后，也可以在被改写之后的"),a("code",[t._v("API")]),t._v("用上默认的"),a("code",[t._v("API")])])]),t._v(" "),a("h2",{attrs:{id:"_14、promise是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、promise是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 14、Promise是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Promise")]),t._v("是"),a("code",[t._v("ES6")]),t._v("引入的一个新的对象，他的主要作用是用来解决JS异步机制里，回调机制产生的“回调地狱”。它并不是什么突破性的"),a("code",[t._v("API")]),t._v("，只是封装了异步回调形式，使得异步回调可以写的更加优雅，可读性更高，而且可以链式调用")])]),t._v(" "),a("h2",{attrs:{id:"_15、iterator是什么，有什么作用？-重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15、iterator是什么，有什么作用？-重要","aria-hidden":"true"}},[t._v("#")]),t._v(" 15、Iterator是什么，有什么作用？(重要)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Iterator")]),t._v("是"),a("code",[t._v("ES6")]),t._v("中一个很重要概念，它并不是对象，也不是任何一种数据类型。因为"),a("code",[t._v("ES6")]),t._v("新增了"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("类型，他们和"),a("code",[t._v("Array")]),t._v("、"),a("code",[t._v("Object")]),t._v("类型很像，"),a("code",[t._v("Array")]),t._v("、"),a("code",[t._v("Object")]),t._v("都是可以遍历的，但是"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("都不能用for循环遍历，解决这个问题有两种方案，一种是为"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("单独新增一个用来遍历的"),a("code",[t._v("API")]),t._v("，另一种是为"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("、"),a("code",[t._v("Array")]),t._v("、"),a("code",[t._v("Object")]),t._v("新增一个统一的遍历"),a("code",[t._v("API")]),t._v("，显然，第二种更好，"),a("code",[t._v("ES6")]),t._v("也就顺其自然的需要一种设计标准，来统一所有可遍历类型的遍历方式。"),a("code",[t._v("Iterator")]),t._v("正是这样一种标准。或者说是一种规范理念")]),t._v(" "),a("li",[t._v("就好像"),a("code",[t._v("JavaScript")]),t._v("是"),a("code",[t._v("ECMAScript")]),t._v("标准的一种具体实现一样，"),a("code",[t._v("Iterator")]),t._v("标准的具体实现是"),a("code",[t._v("Iterator")]),t._v("遍历器。"),a("code",[t._v("Iterator")]),t._v("标准规定，所有部署了"),a("code",[t._v("key")]),t._v("值为"),a("code",[t._v("[Symbol.iterator]")]),t._v("，且"),a("code",[t._v("[Symbol.iterator]")]),t._v("的"),a("code",[t._v("value")]),t._v("是标准的"),a("code",[t._v("Iterator")]),t._v("接口函数(标准的"),a("code",[t._v("Iterator")]),t._v("接口函数: 该函数必须返回一个对象，且对象中包含"),a("code",[t._v("next")]),t._v("方法，且执行"),a("code",[t._v("next()")]),t._v("能返回包含"),a("code",[t._v("value/done")]),t._v("属性的"),a("code",[t._v("Iterator")]),t._v("对象)的对象，都称之为可遍历对象，"),a("code",[t._v("next()")]),t._v("后返回的"),a("code",[t._v("Iterator")]),t._v("对象也就是"),a("code",[t._v("Iterator")]),t._v("遍历器")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj就是可遍历的，因为它遵循了Iterator标准，且包含[Symbol.iterator]方法，方法函数也符合标准的Iterator接口规范。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj.[Symbol.iterator]() 就是Iterator遍历器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" self "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" undefined"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v("给"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("、"),a("code",[t._v("Array")]),t._v("、"),a("code",[t._v("String")]),t._v("都加上了"),a("code",[t._v("[Symbol.iterator]")]),t._v("方法，且"),a("code",[t._v("[Symbol.iterator]")]),t._v("方法函数也符合标准的"),a("code",[t._v("Iterator")]),t._v("接口规范，所以"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("、"),a("code",[t._v("Array")]),t._v("、"),a("code",[t._v("String")]),t._v("默认都是可以遍历的")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Array")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Iterator遍历器")]),t._v("\narray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//{value: "red", done: false}')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1122334455'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Iterator遍历器")]),t._v("\nstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//{value: "1", done: false}')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//set")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Iterator遍历器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//{value: "red", done: false}')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'map'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mapValue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_16、for-in-和for-of有什么区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16、for-in-和for-of有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 16、for...in 和for...of有什么区别？")]),t._v(" "),a("blockquote",[a("p",[t._v("如果看到问题十六，那么就很好回答。问题十六提到了ES6统一了遍历标准，制定了可遍历对象，那么用什么方法去遍历呢？答案就是用"),a("code",[t._v("for...of")]),t._v("。ES6规定，有所部署了载了"),a("code",[t._v("Iterator")]),t._v("接口的对象(可遍历对象)都可以通过"),a("code",[t._v("for...of")]),t._v("去遍历，而"),a("code",[t._v("for..in")]),t._v("仅仅可以遍历对象")])]),t._v(" "),a("ul",[a("li",[t._v("这也就意味着，数组也可以用"),a("code",[t._v("for...of")]),t._v("遍历，这极大地方便了数组的取值，且避免了很多程序用"),a("code",[t._v("for..in")]),t._v("去遍历数组的恶习")])]),t._v(" "),a("h2",{attrs:{id:"_17、generator函数是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、generator函数是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 17、Generator函数是什么，有什么作用？")]),t._v(" "),a("ul",[a("li",[t._v("如果说"),a("code",[t._v("JavaScript")]),t._v("是"),a("code",[t._v("ECMAScript")]),t._v("标准的一种具体实现、"),a("code",[t._v("Iterator")]),t._v("遍历器是"),a("code",[t._v("Iterator")]),t._v("的具体实现，那么"),a("code",[t._v("Generator")]),t._v("函数可以说是"),a("code",[t._v("Iterator")]),t._v("接口的具体实现方式。")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("Generator")]),t._v("函数会返回一个遍历器对象，每一次"),a("code",[t._v("Generator")]),t._v("函数里面的"),a("code",[t._v("yield")]),t._v("都相当一次遍历器对象的"),a("code",[t._v("next()")]),t._v("方法，并且可以通过"),a("code",[t._v("next(value)")]),t._v("方法传入自定义的value,来改变"),a("code",[t._v("Generator")]),t._v("函数的行为。")]),t._v(" "),a("li",[a("code",[t._v("Generator")]),t._v("函数可以通过配合"),a("code",[t._v("Thunk")]),t._v(" 函数更轻松更优雅的实现异步编程和控制流管理。")])]),t._v(" "),a("h2",{attrs:{id:"_18、async函数是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18、async函数是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 18、async函数是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("async")]),t._v("函数可以理解为内置自动执行器的"),a("code",[t._v("Generator")]),t._v("函数语法糖，它配合"),a("code",[t._v("ES6")]),t._v("的"),a("code",[t._v("Promise")]),t._v("近乎完美的实现了异步编程解决方案")])]),t._v(" "),a("h2",{attrs:{id:"_19、class、extends是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19、class、extends是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 19、Class、extends是什么，有什么作用？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ES6")]),t._v(" 的"),a("code",[t._v("class")]),t._v("可以看作只是一个"),a("code",[t._v("ES5")]),t._v("生成实例对象的构造函数的语法糖。它参考了"),a("code",[t._v("java")]),t._v("语言，定义了一个类的概念，让对象原型写法更加清晰，对象实例化更像是一种面向对象编程。"),a("code",[t._v("Class")]),t._v("类可以通过"),a("code",[t._v("extends")]),t._v("实现继承。它和ES5构造函数的不同点")])]),t._v(" "),a("p",[t._v("类的内部定义的所有方法，都是不可枚举的")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///ES5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ES5Fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nES5Fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ES5Fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ES5Fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['toString']")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ES6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ES6Fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ES6Fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[]")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("ES6")]),t._v("的"),a("code",[t._v("class")]),t._v("类必须用"),a("code",[t._v("new")]),t._v("命令操作，而"),a("code",[t._v("ES5")]),t._v("的构造函数不用"),a("code",[t._v("new")]),t._v("也可以执行。")]),t._v(" "),a("li",[a("code",[t._v("ES6")]),t._v("的"),a("code",[t._v("class")]),t._v("类不存在变量提升，必须先定义"),a("code",[t._v("class")]),t._v("之后才能实例化，不像"),a("code",[t._v("ES5")]),t._v("中可以将构造函数写在实例化之后。")]),t._v(" "),a("li",[a("code",[t._v("ES5")]),t._v(" 的继承，实质是先创造子类的实例对象"),a("code",[t._v("this")]),t._v("，然后再将父类的方法添加到"),a("code",[t._v("this")]),t._v("上面。"),a("code",[t._v("ES6")]),t._v(" 的继承机制完全不同，实质是先将父类实例对象的属性和方法，加到"),a("code",[t._v("this")]),t._v("上面（所以必须先调用"),a("code",[t._v("super")]),t._v("方法），然后再用子类的构造函数修改"),a("code",[t._v("this")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"_20、module、export、import是什么，有什么作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20、module、export、import是什么，有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 20、module、export、import是什么，有什么作用？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("module")]),t._v("、"),a("code",[t._v("export")]),t._v("、"),a("code",[t._v("import")]),t._v("是"),a("code",[t._v("ES6")]),t._v("用来统一前端模块化方案的设计思路和实现方案。"),a("code",[t._v("export")]),t._v("、"),a("code",[t._v("import")]),t._v("的出现统一了前端模块化的实现方案，整合规范了浏览器/服务端的模块化方法，用来取代传统的"),a("code",[t._v("AMD/CMD")]),t._v("、"),a("code",[t._v("requireJS")]),t._v("、"),a("code",[t._v("seaJS")]),t._v("、"),a("code",[t._v("commondJS")]),t._v("等等一系列前端模块不同的实现方案，使前端模块化更加统一规范，"),a("code",[t._v("JS")]),t._v("也能更加能实现大型的应用程序开发。")]),t._v(" "),a("li",[a("code",[t._v("import")]),t._v("引入的模块是静态加载（编译阶段加载）而不是动态加载（运行时加载）。")]),t._v(" "),a("li",[a("code",[t._v("import")]),t._v("引入"),a("code",[t._v("export")]),t._v("导出的接口值是动态绑定关系，即通过该接口，可以取到模块内部实时的值")])]),t._v(" "),a("h2",{attrs:{id:"_21、日常前端代码开发中，有哪些值得用es6去改进的编程优化或者规范？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21、日常前端代码开发中，有哪些值得用es6去改进的编程优化或者规范？","aria-hidden":"true"}},[t._v("#")]),t._v(" 21、日常前端代码开发中，有哪些值得用ES6去改进的编程优化或者规范？")]),t._v(" "),a("ul",[a("li",[t._v("常用箭头函数来取代"),a("code",[t._v("var self = this")]),t._v(";的做法。")]),t._v(" "),a("li",[t._v("常用"),a("code",[t._v("let")]),t._v("取代"),a("code",[t._v("var")]),t._v("命令。")]),t._v(" "),a("li",[t._v("常用数组/对象的结构赋值来命名变量，结构更清晰，语义更明确，可读性更好。")]),t._v(" "),a("li",[t._v("在长字符串多变量组合场合，用模板字符串来取代字符串累加，能取得更好地效果和阅读体验。")]),t._v(" "),a("li",[t._v("用"),a("code",[t._v("Class")]),t._v("类取代传统的构造函数，来生成实例化对象。")]),t._v(" "),a("li",[t._v("在大型应用开发中，要保持"),a("code",[t._v("module")]),t._v("模块化开发思维，分清模块之间的关系，常用"),a("code",[t._v("import")]),t._v("、"),a("code",[t._v("export")]),t._v("方法。")])]),t._v(" "),a("h2",{attrs:{id:"_22、es6的了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22、es6的了解","aria-hidden":"true"}},[t._v("#")]),t._v(" 22、ES6的了解")]),t._v(" "),a("blockquote",[a("p",[t._v("新增模板字符串（为JavaScript提供了简单的字符串插值功能）、箭头函数（操作符左边为输入的参数，而右边则是进行的操作以及返回的值Inputs=>outputs。）、for-of（用来遍历数据—例如数组中的值。）arguments对象可被不定参数和默认参数完美代替。ES6将promise对象纳入规范，提供了原生的Promise对象。增加了let和const命令，用来声明变量。增加了块级作用域。let命令实际上就增加了块级作用域。ES6规定，var命令和function命令声明的全局变量，属于全局对象的属性；let命令、const命令、class命令声明的全局变量，不属于全局对象的属性。。还有就是引入module模块的概念")])]),t._v(" "),a("h2",{attrs:{id:"_23、说说你对promise的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23、说说你对promise的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 23、说说你对Promise的理解")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("依照 Promise/A+ 的定义，Promise 有四种状态：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("pending: 初始状态, 非 fulfilled 或 rejected.")])]),t._v(" "),a("li",[a("p",[t._v("fulfilled: 成功的操作.")])]),t._v(" "),a("li",[a("p",[t._v("rejected: 失败的操作.")])]),t._v(" "),a("li",[a("p",[t._v("settled: Promise已被fulfilled或rejected，且不是pending")])])])]),t._v(" "),a("li",[a("p",[t._v("另外， fulfilled 与 rejected 一起合称 settled")])]),t._v(" "),a("li",[a("p",[t._v("Promise 对象用来进行延迟(deferred) 和异步(asynchronous ) 计算")])])]),t._v(" "),a("h2",{attrs:{id:"_24、promise-的构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24、promise-的构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 24、Promise 的构造函数")]),t._v(" "),a("ul",[a("li",[t._v("构造一个 Promise，最基本的用法如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" promise "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// succeed")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fails")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errMessage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Promise 实例拥有 then 方法（具有 then 方法的对象，通常被称为thenable）。它的使用方法如下：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("promise.then(onFulfilled, onRejected)\n")])])]),a("ul",[a("li",[t._v("接收两个函数作为参数，一个在 fulfilled 的时候被调用，一个在rejected的时候被调用，接收参数就是 future，onFulfilled 对应 resolve, onRejected 对应 reject")])]),t._v(" "),a("p",[a("strong",[t._v("什么是 Promise ？")])]),t._v(" "),a("ul",[a("li",[t._v("Promise 就是一个对象，用来表示并传递异步操作的最终结果")]),t._v(" "),a("li",[t._v("Promise 最主要的交互方式：将回调函数传入 then 方法来获得最终结果或出错原因")]),t._v(" "),a("li",[t._v("Promise 代码书写上的表现：以“链式调用”代替回调函数层层嵌套（回调地狱）")])]),t._v(" "),a("h2",{attrs:{id:"_25、谈一谈你了解ecmascript6的新特性？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25、谈一谈你了解ecmascript6的新特性？","aria-hidden":"true"}},[t._v("#")]),t._v(" 25、谈一谈你了解ECMAScript6的新特性？")]),t._v(" "),a("ul",[a("li",[t._v("块级作用区域              "),a("code",[t._v("let a = 1;")])]),t._v(" "),a("li",[t._v("可定义常量                "),a("code",[t._v("const PI = 3.141592654;")])]),t._v(" "),a("li",[t._v("变量解构赋值              "),a("code",[t._v("var [a, b, c] = [1, 2, 3];")])]),t._v(" "),a("li",[t._v("字符串的扩展(模板字符串)  "),a("code",[t._v("var sum =")]),t._v("${a + b}"),a("code",[t._v(";")])]),t._v(" "),a("li",[t._v("数组的扩展(转换数组类型)   "),a("code",[t._v("Array.from($('li'));")])]),t._v(" "),a("li",[t._v("函数的扩展(扩展运算符)     "),a("code",[t._v("[1, 2].push(...[3, 4, 5]);")])]),t._v(" "),a("li",[t._v("对象的扩展(同值相等算法)   "),a("code",[t._v("Object.is(NaN, NaN);")])]),t._v(" "),a("li",[t._v("新增数据类型(Symbol)      "),a("code",[t._v("let uid = Symbol('uid');")])]),t._v(" "),a("li",[t._v("新增数据结构(Map)        "),a("code",[t._v("let set = new Set([1, 2, 2, 3]);")])]),t._v(" "),a("li",[t._v("for...of循环            "),a("code",[t._v("for(let val of arr){};")])]),t._v(" "),a("li",[t._v("Promise对象            "),a("code",[t._v("var promise = new Promise(func);")])]),t._v(" "),a("li",[t._v("Generator函数          "),a("code",[t._v("function* foo(x){yield x; return x*x;}")])]),t._v(" "),a("li",[t._v("引入Class(类)          "),a("code",[t._v("class Foo {}")])]),t._v(" "),a("li",[t._v("引入模块体系            "),a("code",[t._v("export default func;")])]),t._v(" "),a("li",[t._v("引入async函数[ES7]")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncPrint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \n")])])]),a("h2",{attrs:{id:"_26、object-is-与原来的比较操作符-、-的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26、object-is-与原来的比较操作符-、-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 26、Object.is() 与原来的比较操作符 ===、== 的区别？")]),t._v(" "),a("ul",[a("li",[t._v("== 相等运算符，比较时会自动进行数据类型转换")]),t._v(" "),a("li",[t._v("=== 严格相等运算符，比较时不进行隐式类型转换")]),t._v(" "),a("li",[t._v("Object.is 同值相等算法，在 === 基础上对 0 和 NaN 特别处理")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("+0 === -0 //true\nNaN === NaN // false\n\nObject.is(+0, -0) // false\nObject.is(NaN, NaN) // true\n")])])]),a("h2",{attrs:{id:"_27、什么是-babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27、什么是-babel","aria-hidden":"true"}},[t._v("#")]),t._v(" 27、什么是 Babel")]),t._v(" "),a("ul",[a("li",[t._v("Babel 是一个 JS 编译器，自带一组 ES6 语法转化器，用于转化 JS 代码。\n这些转化器让开发者提前使用最新的 JS语法(ES6/ES7)，而不用等浏览器全部兼容。")]),t._v(" "),a("li",[t._v("Babel 默认只转换新的 JS 句法(syntax)，而不转换新的API。")])])])}],!1,null,null,null);s.default=e.exports}}]);